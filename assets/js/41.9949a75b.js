(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{640:function(t,v,_){"use strict";_.r(v);var d=_(11),r=Object(d.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"字面量"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字面量"}},[t._v("#")]),t._v(" 字面量")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("模式")]),t._v(" "),_("th",[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("字母、数字")]),t._v(" "),_("td",[t._v('匹配字面量本身。比如 /f/，匹配字母 "f"。')])]),t._v(" "),_("tr",[_("td",[t._v("\\0")]),t._v(" "),_("td",[t._v("匹配 NUL 字符。")])]),t._v(" "),_("tr",[_("td",[t._v("\\t")]),t._v(" "),_("td",[t._v("匹配水平制表符。")])]),t._v(" "),_("tr",[_("td",[t._v("\\v")]),t._v(" "),_("td",[t._v("匹配垂直制表符。")])]),t._v(" "),_("tr",[_("td",[t._v("\\n")]),t._v(" "),_("td",[t._v("匹配换行符。")])]),t._v(" "),_("tr",[_("td",[t._v("\\r")]),t._v(" "),_("td",[t._v("匹配回车符。")])]),t._v(" "),_("tr",[_("td",[t._v("\\f")]),t._v(" "),_("td",[t._v("匹配换页符。")])]),t._v(" "),_("tr",[_("td",[t._v("\\xnn")]),t._v(" "),_("td",[t._v("匹配拉丁字符。比如 \\xOA 等价于 \\n。")])]),t._v(" "),_("tr",[_("td",[t._v("\\uxxxx")]),t._v(" "),_("td",[t._v("匹配 Unicode 字符。比如 \\u2028 匹配行终止符，\\u2029 匹配段终止符。")])]),t._v(" "),_("tr",[_("td",[t._v("\\cX")]),t._v(" "),_("td",[t._v("匹配 ctrl+X。比如 \\cI 匹配 ctrl+I，等价于 \\t。")])]),t._v(" "),_("tr",[_("td",[t._v("[\\b]")]),t._v(" "),_("td",[t._v("匹配 Backspace 键（特殊记忆）")])])])]),t._v(" "),_("h2",{attrs:{id:"字符组"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字符组"}},[t._v("#")]),t._v(" 字符组")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("模式")]),t._v(" "),_("th",[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("[abc]")]),t._v(" "),_("td",[t._v('匹配 "a"、"b"、"c" 其中任何一个字符。')])]),t._v(" "),_("tr",[_("td",[t._v("[a-d1-4]")]),t._v(" "),_("td",[t._v('匹配 "a"、"b"、"c"、"d"、"1"、"2"、"3"、"4" 其中任何一个字符。')])]),t._v(" "),_("tr",[_("td",[t._v("[^abc]")]),t._v(" "),_("td",[t._v('匹配除了 "a"、"b"、"c" 之外的任何一个字符。')])]),t._v(" "),_("tr",[_("td",[t._v("[^a-d1-4]")]),t._v(" "),_("td",[t._v('匹配除了 "a"、"b"、"c"、"d"、"1"、"2"、"3"、"4" 之外的任何一个字符。')])]),t._v(" "),_("tr",[_("td",[t._v(".")]),t._v(" "),_("td",[t._v("通配符，匹配除了少数字符（\\n）之外的任意字符。")])]),t._v(" "),_("tr",[_("td",[t._v("\\d")]),t._v(" "),_("td",[t._v("匹配数字，等价于 [0-9]。")])]),t._v(" "),_("tr",[_("td",[t._v("\\D")]),t._v(" "),_("td",[t._v("匹配非数字，等价于 [^0-9]。")])]),t._v(" "),_("tr",[_("td",[t._v("\\w")]),t._v(" "),_("td",[t._v("匹配单词字符，等价于 [a-zA-Z0-9_]。")])]),t._v(" "),_("tr",[_("td",[t._v("\\W")]),t._v(" "),_("td",[t._v("匹配非单词字符，等价于 [^a-za-z0-9_]。")])]),t._v(" "),_("tr",[_("td",[t._v("\\s")]),t._v(" "),_("td",[t._v("匹配空白符，等价于 [\\t\\v\\n\\r\\f]。")])]),t._v(" "),_("tr",[_("td",[t._v("\\S")]),t._v(" "),_("td",[t._v("匹配非空白符，等价于 [^ \\t\\v\\n\\r\\f]。")])])])]),t._v(" "),_("h2",{attrs:{id:"量词"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#量词"}},[t._v("#")]),t._v(" 量词")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("模式")]),t._v(" "),_("th",[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("{n,m}")]),t._v(" "),_("td",[t._v("连续出现 n 到 m 次。贪婪模式。")])]),t._v(" "),_("tr",[_("td",[t._v("{n,}")]),t._v(" "),_("td",[t._v("至少连续出现 n 次。贪婪模式。")])]),t._v(" "),_("tr",[_("td",[t._v("{n}")]),t._v(" "),_("td",[t._v("连续出现 n 次。贪婪模式。")])]),t._v(" "),_("tr",[_("td",[t._v("?")]),t._v(" "),_("td",[t._v("等价于 {0,1}。贪婪模式。")])]),t._v(" "),_("tr",[_("td",[t._v("+")]),t._v(" "),_("td",[t._v("等价于 {1,}。贪婪模式。")])]),t._v(" "),_("tr",[_("td",[t._v("*")]),t._v(" "),_("td",[t._v("等价于 {0,}。贪婪模式。")])]),t._v(" "),_("tr",[_("td",[t._v("{n,m}?")]),t._v(" "),_("td",[t._v("连续出现 n 到 m 次。惰性模式。")])]),t._v(" "),_("tr",[_("td",[t._v("{n,}?")]),t._v(" "),_("td",[t._v("至少连续出现 n 次。惰性模式。")])]),t._v(" "),_("tr",[_("td",[t._v("{n}?")]),t._v(" "),_("td",[t._v("连续出现 n 次。惰性模式。")])]),t._v(" "),_("tr",[_("td",[t._v("??")]),t._v(" "),_("td",[t._v("等价于 {0,1}?。惰性模式。")])]),t._v(" "),_("tr",[_("td",[t._v("+?")]),t._v(" "),_("td",[t._v("等价于 {1,}?。惰性模式。")])]),t._v(" "),_("tr",[_("td",[t._v("*?")]),t._v(" "),_("td",[t._v("等价于 {0,}?。惰性模式。")])])])]),t._v(" "),_("h2",{attrs:{id:"位置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#位置"}},[t._v("#")]),t._v(" 位置")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("模式")]),t._v(" "),_("th",[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("^")]),t._v(" "),_("td",[t._v("匹配开头的位置，当正则有修饰符 m 时，表示匹配行开头位置。")])]),t._v(" "),_("tr",[_("td",[t._v("$")]),t._v(" "),_("td",[t._v("匹配结尾的位置，当正则有修饰符 m 时，表示匹配行结尾位置。")])]),t._v(" "),_("tr",[_("td",[t._v("\\b")]),t._v(" "),_("td",[t._v("匹配单词边界，即，\\w 与 \\W、^ 与 \\w、\\w 与 $ 之间的位置。")])]),t._v(" "),_("tr",[_("td",[t._v("\\B")]),t._v(" "),_("td",[t._v("匹配非单词边界，即，\\w 与 \\w、\\W 与 \\W、^ 与 \\W，\\W 与 $ 之间的位置。")])]),t._v(" "),_("tr",[_("td",[t._v("(?=abc)")]),t._v(" "),_("td",[t._v('匹配 "abc" 前面的位置，即此位置后面匹配 "abc"。')])]),t._v(" "),_("tr",[_("td",[t._v("(?!abc)")]),t._v(" "),_("td",[t._v('匹配非 "abc" 前面的位置，即此位置后面不匹配 "abc"。')])])])]),t._v(" "),_("h2",{attrs:{id:"括号的作用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#括号的作用"}},[t._v("#")]),t._v(" 括号的作用")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("模式")]),t._v(" "),_("th",[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("(ab)")]),t._v(" "),_("td",[t._v('捕获型分组。把 "ab" 当成一个整体，比如 (ab)+ 表示 "ab" 至少连续出现一次。')])]),t._v(" "),_("tr",[_("td",[t._v("(?:ab)")]),t._v(" "),_("td",[t._v("非捕获型分组。与 (ab) 的区别是，它不捕获数据。")])]),t._v(" "),_("tr",[_("td",[t._v("(good")]),t._v(" "),_("td",[t._v("nice)")])]),t._v(" "),_("tr",[_("td",[t._v("(?:good")]),t._v(" "),_("td",[t._v("nice)")])]),t._v(" "),_("tr",[_("td",[t._v("\\num")]),t._v(" "),_("td",[t._v("反向引用。比如 \\2，表示引用的是第二个括号里的捕获的数据。")])])])]),t._v(" "),_("h2",{attrs:{id:"修饰符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[t._v("#")]),t._v(" 修饰符")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("符号")]),t._v(" "),_("th",[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("g")]),t._v(" "),_("td",[t._v("全局匹配，找到所有满足匹配的子串。")])]),t._v(" "),_("tr",[_("td",[t._v("i")]),t._v(" "),_("td",[t._v("匹配过程中，忽略英文字母大小写。")])]),t._v(" "),_("tr",[_("td",[t._v("m")]),t._v(" "),_("td",[t._v("多行匹配，把 ^ 和 $ 变成行开头和行结尾。")])])])]),t._v(" "),_("h2",{attrs:{id:"string-相关实例方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#string-相关实例方法"}},[t._v("#")]),t._v(" String 相关实例方法")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("属性")]),t._v(" "),_("th",[t._v("方法作用说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("search")]),t._v(" "),_("td",[t._v("返回正则匹配到的第一个子串在目标字符串中的下标位置。")])]),t._v(" "),_("tr",[_("td",[t._v("split")]),t._v(" "),_("td",[t._v("以正则匹配到的子串，对目标字符串进行切分。返回一个数组。")])]),t._v(" "),_("tr",[_("td",[t._v("match")]),t._v(" "),_("td",[t._v("对目标字符串执行正则匹配操作，返回的匹配结果数组中包含具体的匹配信息。")])]),t._v(" "),_("tr",[_("td",[t._v("replace")]),t._v(" "),_("td",[t._v("对目标字符串进行替换操作。正则是其第一个参数。返回替换后的字符串。")])])])]),t._v(" "),_("h2",{attrs:{id:"replace-第二个参数中的特殊字符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#replace-第二个参数中的特殊字符"}},[t._v("#")]),t._v(" replace 第二个参数中的特殊字符")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("字符")]),t._v(" "),_("th",[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$1,$2,…,$99")]),t._v(" "),_("td",[t._v("匹配第 1-99 个分组里捕获的文本")])]),t._v(" "),_("tr",[_("td",[t._v("$&")]),t._v(" "),_("td",[t._v("匹配到的子串文本")])]),t._v(" "),_("tr",[_("td",[t._v("$`")]),t._v(" "),_("td",[t._v("匹配到的子串的左边文本")])]),t._v(" "),_("tr",[_("td",[t._v("$'")]),t._v(" "),_("td",[t._v("匹配到的子串的右边文本")])]),t._v(" "),_("tr",[_("td",[t._v("$$")]),t._v(" "),_("td",[t._v("美元符号")])])])]),t._v(" "),_("h2",{attrs:{id:"regexp-相关实例方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#regexp-相关实例方法"}},[t._v("#")]),t._v(" RegExp 相关实例方法")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("属性")]),t._v(" "),_("th",[t._v("方法作用说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("test")]),t._v(" "),_("td",[t._v("判断目标字符串中是否有满足正则匹配的子串。返回布尔值。")])]),t._v(" "),_("tr",[_("td",[t._v("exec")]),t._v(" "),_("td",[t._v("比 match 更强大的正则匹配操作。返回结果与 match 一致。")])])])]),t._v(" "),_("h2",{attrs:{id:"regexp-静态属性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#regexp-静态属性"}},[t._v("#")]),t._v(" RegExp 静态属性")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("属性")]),t._v(" "),_("th",[t._v("方法作用说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$1,…,$9")]),t._v(" "),_("td",[t._v("最近一次第 1-9 个分组捕获的数据。")])]),t._v(" "),_("tr",[_("td",[t._v("input")]),t._v(" "),_("td",[t._v("最近一次目标字符串，可以简写成 $_ 。")])]),t._v(" "),_("tr",[_("td",[t._v("lastMatch")]),t._v(" "),_("td",[t._v("最近一次匹配的文本，可以简写成 $& 。")])]),t._v(" "),_("tr",[_("td",[t._v("lastParen")]),t._v(" "),_("td",[t._v("最近一次捕获的文本，可以简写成 $+ 。")])]),t._v(" "),_("tr",[_("td",[t._v("leftContext")]),t._v(" "),_("td",[t._v("目标字符串中 lastMatch 之前的文本，可以简写成 $` 。")])]),t._v(" "),_("tr",[_("td",[t._v("rightContext")]),t._v(" "),_("td",[t._v("目标字符串中 lastMatch 之后的文本，可以简写成 $' 。")])])])]),t._v(" "),_("h2",{attrs:{id:"参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://github.com/qdlaoyao/js-regex-mini-book",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 正则表达式迷你书"),_("OutboundLink")],1)])])}),[],!1,null,null,null);v.default=r.exports}}]);