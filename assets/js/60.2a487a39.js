(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{666:function(_,v,t){"use strict";t.r(v);var s=t(11),n=Object(s.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("p",[_._v("设计模式代表了最佳实践，通常被有经验的面向对象的软件开发人员所采用。使用设计迷失主要是重用代码、让代码更容易被他人理解、保证代码的可靠性。")]),_._v(" "),t("p",[_._v("毫无疑问，设计模式于己于他人于系统都是多赢的，其使得代码编程真正工程化，是软件工程的基石，因此学好是非常有必要的。")]),_._v(" "),t("h2",{attrs:{id:"_6-大设计原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-大设计原则"}},[_._v("#")]),_._v(" 6 大设计原则")]),_._v(" "),t("p",[t("strong",[_._v("开放封闭原则")]),_._v(":")]),_._v(" "),t("p",[_._v("可以理解为"),t("strong",[_._v("对扩展开放，对修改关闭")]),_._v("。在程序需要扩展的时候，不应该去修改原有的代码，而应该去做一个热插拔的效果。")]),_._v(" "),t("p",[t("strong",[_._v("单一职责原则")]),_._v(":")]),_._v(" "),t("p",[_._v("就一个类而言，应该仅有一个引起其变化的原因，简单来说一个类应该只做一件事情。")]),_._v(" "),t("p",[t("strong",[_._v("里氏转换原则")]),_._v(":")]),_._v(" "),t("p",[_._v("表示子类能够覆盖父类，父类能出现的地方子类也能出现。")]),_._v(" "),t("p",[t("strong",[_._v("迪米特原则")]),_._v(":")]),_._v(" "),t("p",[_._v("也叫做最少知道原则，就是说一个实体应当尽量少的与其他实体发生相互作用，从而是的系统功能模块相对独立。")]),_._v(" "),t("p",[t("strong",[_._v("接口隔离原则")]),_._v(":")]),_._v(" "),t("p",[_._v("意思是使用多个相互隔离的接口比使用单个接口要好。这是一个降低类之间耦合度的意思。")]),_._v(" "),t("p",[t("strong",[_._v("依赖倒转原则")]),_._v(":")]),_._v(" "),t("p",[_._v("这是开闭原则的基础，表示针对接口编程，依赖于抽象而不依赖于具体。")])])}),[],!1,null,null,null);v.default=n.exports}}]);